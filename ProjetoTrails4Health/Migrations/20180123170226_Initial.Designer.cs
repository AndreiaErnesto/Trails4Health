// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProjetoTrails4Health.Data;
using System;

namespace ProjetoTrails4Health.Migrations
{
    [DbContext(typeof(Trails4HealthDbContext))]
    [Migration("20180123170226_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoTrails4Health.Models.Agenda_Turista_Trilho", b =>
                {
                    b.Property<int>("Agenda_Turista_TrilhoId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data_Estado_Agendamento");

                    b.Property<DateTime>("Data_Prevista_Inicio_Trilho");

                    b.Property<DateTime>("Data_Reserva");

                    b.Property<string>("Estado_Agendamento");

                    b.Property<int>("Tempo_Gasto");

                    b.Property<int>("TrilhoId");

                    b.Property<int>("TuristaId");

                    b.HasKey("Agenda_Turista_TrilhoId");

                    b.HasIndex("TrilhoId");

                    b.HasIndex("TuristaId");

                    b.ToTable("Agenda_Turista_Trilho");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Dificuldade", b =>
                {
                    b.Property<int>("DificuldadeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeDificuldade");

                    b.Property<string>("Observacoes");

                    b.HasKey("DificuldadeId");

                    b.ToTable("Dificuldade");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Etapa", b =>
                {
                    b.Property<int>("EtapaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Distancia");

                    b.Property<string>("Local_Fim_Trilho");

                    b.Property<string>("Local_Inicio_Trilho");

                    b.HasKey("EtapaId");

                    b.ToTable("Etapa");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodPostal");

                    b.Property<string>("DataNascimento")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Funcao");

                    b.Property<string>("Morada");

                    b.Property<string>("NIF")
                        .IsRequired();

                    b.Property<string>("N_Gabinete");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Telemovel");

                    b.HasKey("ProfessorId");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Resposta_Questionario", b =>
                {
                    b.Property<int>("Resposta_QuestionarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Resposta");

                    b.Property<int>("TuristaId");

                    b.HasKey("Resposta_QuestionarioId");

                    b.HasIndex("TuristaId");

                    b.ToTable("Resposta_Questionario");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Trilho", b =>
                {
                    b.Property<int>("TrilhoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DificuldadeId");

                    b.Property<string>("Distancia_Total");

                    b.Property<string>("Duracao_Media");

                    b.Property<string>("Esta_Ativo");

                    b.Property<string>("Local_Fim_Trilho");

                    b.Property<string>("Local_Inicio_Trilho");

                    b.Property<string>("Nome_Trilho");

                    b.Property<int>("ProfessorId");

                    b.Property<string>("Tempo_Gasto");

                    b.HasKey("TrilhoId");

                    b.HasIndex("DificuldadeId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Trilho");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Trilho_Etapa", b =>
                {
                    b.Property<int>("TrilhoId");

                    b.Property<int>("EtapaId");

                    b.Property<string>("Ativar");

                    b.Property<string>("Ordem_Etapa");

                    b.Property<int>("Trilho_EtapaId");

                    b.HasKey("TrilhoId", "EtapaId");

                    b.HasIndex("EtapaId");

                    b.ToTable("Trilho_Etapa");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Turista", b =>
                {
                    b.Property<int>("TuristaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodPostal");

                    b.Property<string>("ConfirmPassword");

                    b.Property<string>("DataNascimento")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Morada")
                        .IsRequired();

                    b.Property<string>("NIF")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Telemovel");

                    b.HasKey("TuristaId");

                    b.ToTable("Turista");
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Agenda_Turista_Trilho", b =>
                {
                    b.HasOne("ProjetoTrails4Health.Models.Trilho", "Trilho")
                        .WithMany("Agenda_Turistas_Trilhos")
                        .HasForeignKey("TrilhoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoTrails4Health.Models.Turista", "Turista")
                        .WithMany("Agenda_Turistas_Trilhos")
                        .HasForeignKey("TuristaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Resposta_Questionario", b =>
                {
                    b.HasOne("ProjetoTrails4Health.Models.Turista", "Turista")
                        .WithMany("Respostas_Questionario")
                        .HasForeignKey("TuristaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Trilho", b =>
                {
                    b.HasOne("ProjetoTrails4Health.Models.Dificuldade", "Dificuldade")
                        .WithMany("Trilhos")
                        .HasForeignKey("DificuldadeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoTrails4Health.Models.Professor", "Professor")
                        .WithMany("Trilhos")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoTrails4Health.Models.Trilho_Etapa", b =>
                {
                    b.HasOne("ProjetoTrails4Health.Models.Etapa", "Etapa")
                        .WithMany("Trilhos_Etapas")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoTrails4Health.Models.Trilho", "Trilho")
                        .WithMany("Trilhos_Etapas")
                        .HasForeignKey("TrilhoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
